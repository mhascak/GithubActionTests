name: tooling-be.ownership-comment
# Controls when the workflow will run
on:
  pull_request:
    branches: [ "main" ]
    
env:
  REPO: 'https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git'
  BRANCH: '${GITHUB_REF/#refs\/heads\//}'
  CODEOWNER_SEARCH_COMMENT_PREFIX: 'Notifying code owners:'
  MY_GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DOTNET_VERSION: '6.0.x'
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 
  
jobs:
  notify-comment:

    runs-on: ubuntu-latest
    steps:
  
      - name: API LIMIT BEFORE
        shell: pwsh
        run: |
          $response = & gh api rate_limit     	
          echo $response
          
      - name: Sparse checkout
        shell: bash
        run: |
          echo "${GITHUB_REF/#refs\/heads\//}"
          echo "${GITHUB_SHA}:refs/remotes/origin/${BRANCH}"
          
      - name: Partial Clone
        run: |
          git clone --filter=blob:none --no-checkout --depth 10  --sparse ${{ env.REPO }} ./repo/tool
          cd ./repo/tool
          git sparse-checkout set --cone
          git sparse-checkout add "tools"
          git checkout
          
      - name: Partial Clone current branch Ownership File
        run: |
          git clone --filter=blob:none --no-checkout --depth 10  --sparse ${{ env.REPO }} ./repo
          cd ./repo
          git -c protocol.version=2 fetch --no-tags --prune --progress --depth=10 origin +${GITHUB_SHA}:refs/remotes/origin/${{ env.BRANCH }}
          git sparse-checkout set --cone
          git sparse-checkout add ".github"
          git checkout --progress --force -B ${{ env.BRANCH }} refs/remotes/origin/${{ env.BRANCH }}
          cat .github/CODEOWNERS
          
      - name: LS
        shell: pwsh
        run: |
          tree
          cat ./repo/.github/CODEOWNERS
          
      - name: Install dependencies
        run: dotnet restore
        working-directory: ./repo/tool/tools/TestConsoleApp
        
      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: ./repo/tool/tools/TestConsoleApp
        
      - name: Run owneship TOOL
        id: CodeOwnersParser
        shell: pwsh
        run: |
          $output = & ${{ github.workspace }}/repo/tool/tools/TestConsoleApp/TestConsoleApp/bin/Release/net6.0/TestConsoleApp > output.txt
          $reportData = (Get-Content ${{ github.workspace }}/output.txt) -join "%0A"
          echo "::set-output name=owners::${reportData}"
        continue-on-error: false
        
      - name: Check if already commented
        uses: peter-evans/find-comment@v1
        id: find-comment
        with:
          issue-number: ${{ github.event.number }}
          comment-author: 'github-actions[bot]'
          body-includes: ${{ env.CODEOWNER_SEARCH_COMMENT_PREFIX }}
      
      #If no existing comment exists create a new one if there were any owners found
      - name: Create new comment
        if: steps.find-comment.outputs.comment-id == '' && steps.CodeOwnersParser.outputs.owners != ''
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.number }}
          body: |
            **${{ env.CODEOWNER_SEARCH_COMMENT_PREFIX }}**
            ${{ steps.CodeOwnersParser.outputs.owners }}
      
      #If existing comment was found replace it
      - name: Update existing comment
        if: steps.find-comment.outputs.comment-id != '' && steps.CodeOwnersParser.outputs.owners != ''
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          edit-mode: replace
          body: |
            **${{ env.CODEOWNER_SEARCH_COMMENT_PREFIX }}**
            ${{ steps.CodeOwnersParser.outputs.owners }}


      - name: API LIMIT AFTER
        shell: pwsh
        run: |
          $response = & gh api rate_limit     	
          echo $response
