name: tooling-be.ownership-comment
# Controls when the workflow will run
on:
  pull_request:
    branches: [ "main" ]
    
env:
  MY_GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
jobs:
  notify-comment:

    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - name: Get PR Files
        id: PrCheck
        shell: pwsh
        run: |
          $response = & gh api repos/mhascak/GithubActionTests/pulls/${{ github.event.pull_request.number }}/files      	
          $usersObject = ConvertFrom-Json â€“InputObject $response
          echo $usersObject
        
      - name: Set variable if doesn't exit
        shell: pwsh
        run: echo steps.PrCheck.outputs
        continue-on-error: false

      - name: Set variable if doesn't exit
        shell: pwsh
        run: echo steps.PrCheck.outputs

      - name: List files
        run: ls

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v2
#
#      - name: CodeOwnersParser
#        id: CodeOwnersParser
#        uses: Gamer025/CodeOwnersParser@v1
#        with:
#          #We don't specify the botname so we always get all owners returned, because we are replacing the existing comment
#          #If we were appending or always posting a new comment botname should be specified
#          prefix: 'Notifying code owners: '
#
#      - name: Check if already commented
#        uses: peter-evans/find-comment@v1
#        id: find-comment
#        with:
#          issue-number: ${{ github.event.number }}
#          comment-author: 'github-actions[bot]'
#          body-includes: 'Notifying code owners: '
#      
#      #If no existing comment exists create a new one if there were any owners found
#      - name: Create new comment
#        if: steps.find-comment.outputs.comment-id == '' && steps.CodeOwnersParser.outputs.owners != ''
#        uses: peter-evans/create-or-update-comment@v1
#        with:
#          issue-number: ${{ github.event.number }}
#          body: |
#            ${{ steps.CodeOwnersParser.outputs.owners-formatted }}
#      
#      #If existing comment was found replace it
#      - name: Update existing comment
#        if: steps.find-comment.outputs.comment-id != '' && steps.CodeOwnersParser.outputs.owners != ''
#        uses: peter-evans/create-or-update-comment@v1
#        with:
#          comment-id: ${{ steps.find-comment.outputs.comment-id }}
#          edit-mode: replace
#          body: |
#            ${{ steps.CodeOwnersParser.outputs.owners-formatted }}
